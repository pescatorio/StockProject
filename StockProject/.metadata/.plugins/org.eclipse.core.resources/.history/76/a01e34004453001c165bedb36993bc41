package view;

import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.border.EtchedBorder;

import DAO.MyOrderDAO;
import DAO.ProductDetailDAO;
import VO.MyOrderVO;
import VO.ProductVO;

public class IsStockedPane extends JPanel implements ActionListener{
	private JPanel jp[] = new JPanel[7];
	private JLabel jl[] = new JLabel[6];
	private JTextField tf[] = new JTextField[6];
	private JButton rsb;	//주문하기
	private JButton okb;	//제품조회하기
	MyOrderVO mvo = new MyOrderVO();
	MyOrderDAO mdao = new MyOrderDAO();
	String[] caption = {"주문아이디 : ","제품아이디 : ","제조사아이디 : ","주문량 : ","주문일 : ","입고여부(전[0]/후[1]) : "};
	
	public IsStockedPane(){
		setLayout(new GridLayout(8,1));
		EtchedBorder eb = new EtchedBorder();
		setBorder(eb);
		
		int size = caption.length;
		
		for(int i=0;i<size;i++){
			jl[i] = new JLabel(caption[i]);
			tf[i] = new JTextField(15);
			jp[i] = new JPanel();
			jp[i].add(jl[i]);
			jp[i].add(tf[i]);
			add(jp[i]);
			tf[i].setEditable(false);
				
		}
		tf[0].setEditable(true);
		jp[size] = new JPanel();
		okb = new JButton("주문조회");
		okb.addActionListener(this);
		rsb=new JButton("입고처리");
		rsb.addActionListener(this);
		rsb.setEnabled(false);
		jp[size].add(okb);
		jp[size].add(rsb);
		add(jp[size]);
	}
	

	@Override
	public void actionPerformed(ActionEvent ae) {
		String ae_type = ae.getActionCommand();
		MyOrderVO mvo = new MyOrderVO();
		ProductVO pvo;
		try {
			pvo = mdao.getProduct(mvo.getProuct_id());
		} catch (Exception e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		int tmpOid = Integer.parseInt((tf[0].getText()));	//order_id를 int형으로 변환하는 임시변수
		if(ae_type.equals(okb.getText())){
			try{
				if(tmpOid!=0){
					mvo = mdao.getMyOrder(tmpOid);
				}
			}catch(Exception e){
				System.out.println("e=["+e+"]");
			}
			if(mvo!=null){
				tf[0].setText(mvo.getOrder_id()+"");
				tf[1].setText(mvo.getProuct_id()+"");
				tf[2].setText(mvo.getManufacturer_id()+"");
				tf[3].setText(mvo.getOrder_number()+"");
				tf[4].setText(mvo.getOrder_date());
				tf[5].setText(mvo.getIsStocked());
				tf[5].setEditable(true);
				rsb.setEnabled(true);
				
			}else{
				JOptionPane.showMessageDialog(this, "주문아이디가 존재하지 않습니다.");
				int size = caption.length;
				for(int i=0;i<size;i++){
					tf[i].setText(null);
					tf[5].setEditable(false);
				}
			}
		}else if(ae_type.equals(rsb.getText())){
			int tmpPid = mvo.getProuct_id();
			String tmpIsStocked = tf[5].getText();
			System.out.println(tmpIsStocked);
			if(tmpIsStocked.equals("0")||tmpIsStocked.equals("1")){
				int result= mdao.isStocked(tmpOid, tmpIsStocked);
				//재고수를 저장하는 임시변수
				int tmpStock =Integer.parseInt(pvo.getStock());
				System.out.println(tmpStock);
				if(result>0){
					JOptionPane.showMessageDialog(this,"입고처리가 완료되었습니다.");
				}else{
					JOptionPane.showMessageDialog(this,"입고처리가  실패하였습니다.");
				}
			}else{
				JOptionPane.showMessageDialog(this, "입고전:0/ 입고후:1을 입력해주세요.");
			}
			
			int size = caption.length;
			for(int i =0; i<size;i++){
				if(tf[i]!=null)
				tf[i].setText(null);
				tf[5].setEditable(false);
			}
		}
	}
	
}